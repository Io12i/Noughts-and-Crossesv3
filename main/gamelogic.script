function init(self)
	board = {
		{0,0,0},
		{0,0,0},
		{0,0,0}
	}
	turn = false
	msg.post('.', 'acquire_input_focus')
	coords = {
		vmath.vector3(223.5, 555.5, 0),
		vmath.vector3(479.5, 556.5, 0),
		vmath.vector3(727.5, 558.5, 0),
		vmath.vector3(224.5, 320.5, 0),
		vmath.vector3(477.5, 319.5, 0),
		vmath.vector3(727.5, 320.5, 0),
		vmath.vector3(223.5, 69.5, 0),
		vmath.vector3(471.5, 76.5, 0),
		vmath.vector3(722.5, 79.5, 0)
	}
	used_coords = {}
end

function place(pos)
	local current_distance = nil
	local in_used_coords = false
	for i,v in ipairs(coords) do
		local distance = vmath.length(pos-v)
		if current_distance == nil or distance < current_distance  then
			current_distance = distance
			new_pos = coords[i]
			index = i
		end
	end
	for j, k in ipairs(used_coords) do
		if new_pos == k then
			in_used_coords = true
		end
	end
	if not in_used_coords then
		board[(index-1)%3 + 1][math.floor((index-1)/3)+1] = turn
		table.insert(used_coords, new_pos)
		if turn then
			factory.create('/factory#factory o', new_pos)
			turn = not turn
		else
			factory.create('/factory#factory x', new_pos)
			turn = not turn
		end
		pprint(board)
	end
end
function check_win(i, j)
	local win = false
	if board[i][j] == board[i+1][j] and board[i+1][j] == board[i+2][j]then
		win = true
	end
end
function on_input(self, action_id, action)
	if action.pressed and action_id == hash('touch') then
		place(vmath.vector3(action.x, action.y, 0))
	end
end